Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactRedux = require('react-redux');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _actions = require('@redux/user/actions');

var UserActions = _interopRequireWildcard(_actions);

var _MenuView = require('./MenuView');

var _MenuView2 = _interopRequireDefault(_MenuView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var authMenu = [{ title: 'Update Profile', onPress: function onPress() {
    _reactNativeRouterFlux.Actions.updateProfile();
  } }, { title: 'Change Password', onPress: function onPress() {
    _reactNativeRouterFlux.Actions.passwordReset();
  } }];

var unauthMenu = [{ title: 'Login', onPress: function onPress() {
    _reactNativeRouterFlux.Actions.login();
  } }, { title: 'Sign Up', onPress: function onPress() {
    _reactNativeRouterFlux.Actions.signUp();
  } }];

var mapStateToProps = function mapStateToProps(state) {
  return {
    user: state.user,
    unauthMenu: unauthMenu,
    authMenu: authMenu
  };
};

var mapDispatchToProps = {
  logout: UserActions.logout
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_MenuView2.default);