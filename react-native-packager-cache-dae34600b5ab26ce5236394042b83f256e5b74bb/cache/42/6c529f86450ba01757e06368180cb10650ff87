Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/deni/BletatPuntore/src/containers/recipes/Card/CardView.js';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

var _theme = require('@theme/');

var _ui = require('@ui/');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = _reactNative.StyleSheet.create({
  favourite: {
    position: 'absolute',
    top: -45,
    right: 0
  }
});

var RecipeCard = function (_Component) {
  _inherits(RecipeCard, _Component);

  function RecipeCard() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, RecipeCard);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RecipeCard.__proto__ || Object.getPrototypeOf(RecipeCard)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {
      var _this$props = _this.props,
          title = _this$props.title,
          body = _this$props.body,
          image = _this$props.image,
          onPress = _this$props.onPress,
          onPressFavourite = _this$props.onPressFavourite,
          isFavourite = _this$props.isFavourite;


      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { activeOpacity: 0.8, onPress: onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 58
          }
        },
        _react2.default.createElement(
          _ui.Card,
          { image: image && { uri: image }, __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: [_theme.AppStyles.paddingBottomSml, _theme.AppStyles.heightcard], __source: {
                fileName: _jsxFileName,
                lineNumber: 60
              }
            },
            _react2.default.createElement(
              _ui.Text,
              { h3: true, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 61
                }
              },
              title
            ),
            !!onPressFavourite && _react2.default.createElement(_reactNative.TouchableOpacity, {
              activeOpacity: 0.8,
              onPress: onPressFavourite,
              style: [styles.favourite],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 64
              }
            })
          )
        )
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  return RecipeCard;
}(_react.Component);

RecipeCard.componentName = 'RecipeCard';
RecipeCard.propTypes = {
  image: _propTypes2.default.string.isRequired,
  title: _propTypes2.default.string.isRequired,
  body: _propTypes2.default.string.isRequired,
  onPress: _propTypes2.default.func,
  onPressFavourite: _propTypes2.default.func,
  isFavourite: _propTypes2.default.bool
};
RecipeCard.defaultProps = {
  onPress: null,
  onPressFavourite: null,
  isFavourite: null
};
exports.default = RecipeCard;